server:
  port: 8088

logging:
  level:
    root: info
    com.netflix: info
    org.springframework.cloud.gateway: debug
# 配置gateway路由
spring:
  redis:
    host: localhost
    port: 6379
    password: 123456

  cloud:
    gateway:
      discovery:
        locator:
          # 是否可以通过其他服务的serviceId来转发到具体的服务实例。默认为false
          # 为true,自动创建路由,路由访问方式：http://Gateway_HOST:Gateway_PORT/大写的serviceId/**，其中微服务应用名默认大写访问
          enabled: true
          lowerCaseServiceId: true

          filters:
            - StripPrefix=1 # 去除请求地址中的to_client
#            - name: RequestRateLimiter
#              args:
#                key-resolver: "@myKeyResolver"
#                rate-limiter: "@myRateLimiter"
#            - RequestRateLimiter=1,4,'@userKeyResolver'
            # 限流器
            - name: RequestRateLimiter
              args:
                # 指定限流的键的解析器的Bean的名字,这个类需要交给Spring实例化
                redis-rate-limiter.replenishRate: 1 # 令牌桶每秒填充速率,当用户请求速率低于这个值,不会有请求被拒绝.
                redis-rate-limiter.burstCapacity: 1 # 令牌桶总容量,也是允许用户每秒的最大请求数.也就是当前秒可以突发申请burstCapacity个请求,但是下一秒只有replenishRate个可用, 两者值一样时,速率稳定.
#            - Hystrix="@gatewayController.fallback"


      #可以根据请求参数,cookie,host,请求时间,请求头等进行校验判断路由, 下面根据先后顺序转发
      routes:
        - id: host_route
          uri: https://www.csdn.net/
          predicates:
            - Host=**.csdn.com,**.csdn.net # 请求域名携带csdn的,则转发

        - id: query_route
          uri: http://httpbin.org:80/get
          predicates:
            - Query=username, zzz* # 请求参数含有username,且值满足zzz开头的,则转发(对值的匹配可以省略)
          filters:
            - AddResponseHeader=X-Request-Foo, Bar
            - AddRequestParameter=age, 18

        - id: header_route
          uri: https://www.baidu.com/s?wd=header_route
          predicates:
            - Header=request, \d+ # 如果请求头含有request,且为数字,则转发

        - id: cookie_route
          uri: https://www.baidu.com/s?wd=cookie_route
          predicates:
            - Cookie=name, zzzgd # 如果携带cookie,参数名为name,值为zzzgd,则转发

        - id: path_route
          uri: https://www.baidu.com/s?wd=path_route
          predicates:
            - Path=/zzzgd/** # 请求地址携带zzzgd的,则转发

        # 路由到其他服务,url需要用[lb://]+[serviceId]
        - id: service_client
          uri: lb://service-client
          predicates:
            - Path=/to_client/** # 如果请求地址满足/to_client/**,则转发到 service-client 服务
          filters:
            - StripPrefix=1 # 去除请求地址中的to_client
            # 限流器
            - name: RequestRateLimiter
              args:
                # 指定限流的键的解析器的Bean的名字,这个类需要交给Spring实例化
                #                key-resolver: '@remoteAddrKeyResolver'
                redis-rate-limiter.replenishRate: 1 # 令牌桶每秒填充速率,当用户请求速率低于这个值,不会有请求被拒绝.
                redis-rate-limiter.burstCapacity: 2 # 令牌桶总容量,也是允许用户每秒的最大请求数.也就是当前秒可以突发申请burstCapacity个请求,但是下一秒只有replenishRate个可用, 两者值一样时,速率稳定.

        - id: after_route
          uri: https://www.baidu.com/s?wd=after_route
          predicates:
            - After=2019-01-01T17:42:47.789-07:00[America/Denver] # 如果请求时间大于该时间,则转发




